How did viewing a diff between two versions of a file help you see the bug that
was introduced?

	It only showed the lines which were changed and so it was easy to find the bug as we didnt have to compare all the lines.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    We can review the approaches we used while solving a problem.
    And how actually we made to the best solution after many attempts.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros:
    -Easy to make logical commits.
    Cons:
    -We might forget to make commits until too late.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    To keep the logically related files together and see the
    changes in those files simultaneously.

How can you use the commands git log and git diff to view the history of files?

    -'git log' can be used to track how many commits have been made and by whome.
    -'git diff' can be used to compare any two commits.

How might using version control make you more confident to make changes that
could break something?

    -Using the 'git checkout' command i can always come back to the latest code.
    So, i can experiment with the earlier commits to see what can break something

Now that you have your workspace set up, what do you want to try using Git for?

    For keeping various versions of the code related to my recent project.
